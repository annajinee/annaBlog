---
title: "택배 접수 연계 및 반품 리펙토링"
layout: post
term: 2017.08 ~ 2018.05
headerImage: true
projects: true
category: project
externalLink: false
image: ../assets/images/recept.png
---

Java, JPA, RESTful API, MySQL, HTML5, TypeScript, Angular2, Linux (CentOS), Nginx, Proxy, Git

---

유지보수를 위한 롯데홈쇼핑, 티몬, 홈플러스 제공 배송 추적 에이전트 통합 및 컨버팅 작업 입니다.
Pure Java를 Spring boot로 변환 (롯데 홈쇼핑) , PHP를 Spring boot로 변환 (티몬, 홈플러스) 하였습니다.

---

<h2>주요 프로세스 정리</h2>

 <h3>택배 접수</h3>


 <pre>
 - 접수 가능 유효성 체크 후 접수, 결과 값 전송 (JSON)
   1. tier_Code유효성 체크
   2. 주문번호 중복여부 체크
   3. 전화번호-우편번호 하이픈(-)제거 및 숫자 유효성 체크

    01 (우체국일 경우) -> JsonObject type 그대로 postlinker로 보냄
    ST_ORDMST저장 -> 택배사별로 linker agent
    로젠 택배사(soap 방식)를 제외한 나머지 택배사 DB to DB 연동  (ST_ORDMST에 저장된 택배사 코드로 linker agent들이 자체 처리)

 - trnYn (처리 상태값)
 * 접수 입력 -> trnYn : N
 * 택배 사 데이터 전송 -> trnYn : P
 * 송장 발급 -> trnYn: Y
 * 결과 값 전송 후 정상 회신 -> trnYn : F
 * 에러 시 -> trnYn : E
 * CJ 협력사코드 이상 에러 (하루 이상 송장발급안됨) -> trnYn : B
 </pre>

 <h3>접수 결과 값 폴링</h3>

 <pre>
 - pollingReception (접수 폴링) -> workerThread_Reception

   1. 유효한 tier code에서 처리 상태(trnYn)이 Y또는 E인 경우에 전송
       SELECT s FROM StTierCodesData s WHERE s.useYn = 'Y'
       SELECT R FROM StReceptOrdmstData R WHERE R.tierCode = :tierCode AND (R.trnYn = 'Y' OR R.trnYn = 'E')

   2. 전송 후 회신 Result가 Y일 경우, 상태값 F로 변경
       UPDATE StReceptOrdmstData R set R.trnYn = :trnYn, R.trnTim = :trnTim WHERE R.tierCode = :tierCode AND R.orgOrdCde = :orgOrdCde
 </pre>

 <h3>접수 수정</h3>

 <pre>
 - 접수 수정 불가 유효성 체크 후 수정, 결과 값 전송 (JSON)
   1. TierCode 유효성체크
   2. 주문번호 유효성 체크
   3. TrnYn이 Y(처리완료)가 아닌 경우
 </pre>

 <h3>접수 조회</h3>

 <pre>
 - 접수 조회 유효성 체크 후 삭제, 결과 값 전송 (JSON)
   1. TierCode 유효성체크
   2. 주문번호 유효성 체크
 </pre>

 <h3>접수 삭제</h3>

 <pre>
 - 접수 삭제 불가 유효성 체크 후 삭제, 결과 값 전송 (JSON)
   1. TierCode 유효성체크
   2. 주문번호 유효성 체크
   3. TrnYn이 N(미완료)인 경우
 </pre>

 <h3>맞교환 접수</h3>

 <pre>
 - 접수 가능 유효성 체크 후 접수, 결과 값 전송 (JSON)
   1. tier_Code유효성 체크
   2. 주문번호 중복여부 체크
   3. 전화번호-우편번호 하이픈(-)제거 및 숫자 유효성 체크
 </pre>

 <h3>맞교환 폴링</h3>

 <pre>
 - pollingExChange (접수 폴링) -> workerThread_Exchange

   1. 미처리(trnYn='N)일 경우, 접수 테이블(ST_RECEIPT_ORDMST)에서 전 주문 건 정보 찾아 반품 처리
       SELECT R FROM StReceptOrdmstData R WHERE R.orgOrdCde = :orgOrdCde AND  R.tierCode = :tierCode
       -> 반품 url로 전송, 접수 등록 (우체국 comCode='01'일 경우, postlink로 접수 등록)

   2. 처리 완료 된 건들 (trnYn='Y or 'E') 결과 값 전송 후 trnYn='F' 처리 (JSON call back)
      SELECT E FROM StExOrdmstData E WHERE E.tierCode = :tierCode AND (E.trnYn = 'Y' OR E.trnYn = 'E')"
      UPDATE StExOrdmstData S set S.trnYn = :trnYn, S.trntim = :trnTim WHERE S.tierCode = :tierCode AND S.ordCde = :ordCde"
 </pre>

 <h3>맞교환 접수 조회</h3>

 <pre>
 - 접수 가능 유효성 체크 후 접수, 결과 값 전송 (JSON)
   1. tier_Code유효성 체크
   2. 주문번호 유효성 체크
 </pre>


 <h3>맞교환 접수 삭제</h3>

 <pre>
 - 접수 삭제 불가 유효성 체크 후 삭제, 결과 값 전송 (JSON)
   1. TierCode 유효성체크
   2. 주문번호 유효성 체크
   3. 삭제여부 상태값 체크 : TrnYn='Y'나 'F'가 아닌 경우 삭제 가능
 </pre>

 <h3>우체국 사용자 등록/조회/삭제/수정</h3>

 <pre>
 - postLinker로 전송 후, 결과 값 받아옴 (JSON)
 </pre>

 <h3>Tier_code 폴링</h3>

 <pre>
 - Tier_code 유효성 체크 위해, HashMap에 저장 후 비교 (유효성 체크 때마다 select시간 줄이기 위함)

 1. ST_TierCode에서 useYn='Y'인건 저장
    - "SELECT s FROM StTierCodesData s WHERE s.useYn = 'Y'"

    tierCodesDataHashMap("TierCode",'"해당 건 Object") 형태

 : 새벽 2시 refresh
 : 신규 tier_code추가 시, /refresh
 </pre>

 <h3>신용코드 유효성 체크 컨트롤러 (/get_invalidcredit)(잘안씀)</h3>

 <pre>
 -  유효성 체크 후, 결과 값 전송 (JSON)
   > with u  Url로 전송 후, 결과값 받아옴
 </pre>


 <h3>tier_code 유효성 체크 컨트롤러 (/get_invalidtiercode)(잘안씀)</h3>

 <pre>
 - St_TierCode에서 tier_code로 select하여 useYn(사용여부) 값 전송
 </pre>